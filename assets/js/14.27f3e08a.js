(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{284:function(a,t,e){"use strict";e.r(t);var s=e(14),n=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"waiting-to-translate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waiting-to-translate"}},[a._v("#")]),a._v(" waiting to translate")]),a._v(" "),t("h3",{attrs:{id:"vue3-模板语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue3-模板语法"}},[a._v("#")]),a._v(" Vue3 模板语法")]),a._v(" "),t("h3",{attrs:{id:"插值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插值"}},[a._v("#")]),a._v(" 插值")]),a._v(" "),t("h5",{attrs:{id:"数据绑定最常见的形式就是使用双大括号的文本插值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据绑定最常见的形式就是使用双大括号的文本插值"}},[a._v("#")]),a._v(" 数据绑定最常见的形式就是使用双大括号的文本插值：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<div id="app">\n  <p>{{ message }}</p>\n</div>\n')])])]),t("p",[a._v("如果不想改变标签的内容，可以通过使用 v-once 指令执行一次性地插值，当数据改变时，插值处的内容不会更新。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<span v-once>这个将不会改变: {{ message }}</span>\n")])])]),t("hr"),a._v(" "),t("h3",{attrs:{id:"html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[a._v("#")]),a._v(" HTML")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<div id="example1" class="demo">\n    <p>使用双大括号的文本插值: {{ rawHtml }}</p>\n    <p>使用 v-html 指令: <span v-html="rawHtml"></span></p>\n</div>\n \n<script>\nconst RenderHtmlApp = {\n  data() {\n    return {\n      rawHtml: \'<span style="color: red">这里会显示红色！</span>\'\n    }\n  }\n}\n \nVue.createApp(RenderHtmlApp).mount(\'#example1\')\n<\/script>\n')])])]),t("p",[a._v("最终上述代码span变成红色，并打印出文字")]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),t("p",[a._v("对于布尔属性，常规值为 true 或 false，如果属性值为 null 或 undefined，则该属性不会显示出来。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<div id="app">\n  <label for="r1">修改颜色</label><input type="checkbox" v-model="use" id="r1">\n  <br><br>\n  <div v-bind:class="{\'class1\': use}">\n    v-bind:class 指令\n  </div>\n</div>\n    \n<script>\nconst app = {\n  data() {\n    return {\n      use: false\n    }\n  }\n}\n \nVue.createApp(app).mount(\'#app\')\n<\/script>\n')])])]),t("p",[a._v("上述代码v-model绑定布尔值，class属性是否调用取决于布尔值")]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表达式"}},[a._v("#")]),a._v(" 表达式")]),a._v(" "),t("p",[a._v("Vue.js 都提供了完全的 JavaScript 表达式支持。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<div id=\"app\">\n    {{5+5}}<br>\n    {{ ok ? 'YES' : 'NO' }}<br>\n    {{ message.split('').reverse().join('') }}\n    <div v-bind:id=\"'list-' + id\">菜鸟教程</div>\n</div>\n    \n<script>\nconst app = {\n  data() {\n    return {\n      ok: true,\n      message: 'RUNOOB!!',\n      id: 1\n    }\n  }\n}\n \nVue.createApp(app).mount('#app')\n<\/script>\n")])])]),t("p",[a._v("PS:语句和流程制均不会生效")]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[a._v("#")]),a._v(" 指令")]),a._v(" "),t("p",[a._v("指令是带有 v- 前缀的特殊属性，用于在表达式的值改变时，将某些行为应用到 DOM 上")]),a._v(" "),t("h4",{attrs:{id:"v-if"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-if"}},[a._v("#")]),a._v(" v-if")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<div id="app">\n    <p v-if="seen">现在你看到我了</p>\n</div>\n    \n<script>\nconst app = {\n  data() {\n    return {\n      seen: true  /* 改为false，信息就无法显示 */\n    }\n  }\n}\n \nVue.createApp(app).mount(\'#app\')\n<\/script>\n')])])]),t("p",[a._v("根据布尔值取决于是否插入标签元素")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"v-else"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-else"}},[a._v("#")]),a._v(" v-else")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<div id="app">\n    <div v-if="Math.random() > 0.5">\n      随机数大于 0.5\n    </div>\n    <div v-else>\n      随机数小于等于 0.5\n    </div>\n</div>\n    \n<script>\nVue.createApp(app).mount(\'#app\')\n<\/script>\n')])])]),t("p",[a._v("随机生成一个数字，判断是否大于 0.5，然后输出对应信息")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"v-show"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-show"}},[a._v("#")]),a._v(" v-show")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<h1 v-show="ok">Hello!</h1>\n')])])]),t("p",[a._v("据条件展示元素")]),a._v(" "),t("hr"),a._v(" "),t("p",[t("strong",[a._v("v-show:通过css样式中的dispaly：none；控制元素显示、隐藏。此元素进入页面后，此元素会频繁的改变显示状态，此时用v-show更加合适，如页面中有一个toggle按钮,点击按钮来控制某块区域的显示隐藏")]),a._v(" "),t("strong",[a._v("v-if:通过控制vue的虚拟dom树上的节点，来联动控制真实dom上的节点，从而控制元素的显示、隐藏。此元素进入页面后，此元素只会显示或隐藏不会被再次改变显示状态，此时用v-if更加合适，如请求后台接口通过后台数据控制某块内容是否显示或隐藏，且这个数据在当前页不会被修改")])]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"v-for"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-for"}},[a._v("#")]),a._v(" v-for")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<div id=\"app\">\n  <ol>\n    <li v-for=\"site in sites\">\n      {{ site.text }}\n    </li>\n  </ol>\n</div>\n<script>\nconst app = {\n  data() {\n    return {\n      sites: [\n        { text: 'Google' },\n        { text: 'Runoob' },\n        { text: 'Taobao' }\n      ]\n    }\n  }\n}\n\nVue.createApp(app).mount('#app')\n<\/script>\n")])])]),t("p",[a._v("绑定数组的数据来渲染一个项目列表")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"v-on"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-on"}},[a._v("#")]),a._v(" v-on")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('\x3c!-- 完整语法 --\x3e\n<a v-on:click="doSomething"> ... </a>\n\n\x3c!-- 缩写 --\x3e\n<a @click="doSomething"> ... </a>\n\n\x3c!-- 动态参数的缩写 (2.6.0+) --\x3e\n<a @[event]="doSomething"> ... </a>\n')])])]),t("p",[a._v("监听DOM事件")]),a._v(" "),t("hr"),a._v(" "),t("h4",{attrs:{id:"v-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[a._v("#")]),a._v(" v-model")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<div id=\"app\">\n    <p>{{ message }}</p>\n    <input v-model=\"message\">\n</div>\n \n<script>\nconst app = {\n  data() {\n    return {\n      message: 'Runoob!'\n    }\n  }\n}\n \nVue.createApp(app).mount('#app')\n<\/script>\n")])])]),t("p",[a._v("用来在 input、select、textarea、checkbox、radio 等表单控件元素上创建双向数据绑定，根据表单上的值，自动更新绑定的元素的值。")]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"动态参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态参数"}},[a._v("#")]),a._v(" 动态参数")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a v-bind:[attributeName]="url"> ... </a>\n\n\x3c!-- 简写 --\x3e\n<a :[attributeName]="url"> ... </a>\n')])])]),t("p",[a._v('这里的 attributeName 会作为一个 JavaScript 表达式被动态执行，计算得到的值会被用作最终的参数。举例来说，如果你的组件实例有一个数据属性 attributeName，其值为 "href"，那么这个绑定就等价于 v-bind:href。')]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a v-on:[eventName]="doSomething"> ... </a>\n\n\x3c!-- 简写 --\x3e\n<a @[eventName]="doSomething">\n')])])]),t("p",[a._v('在此示例中，当 eventName 的值是 "focus" 时，v-on:【eventName] 就等价于 v-on:focus')]),a._v(" "),t("h3",{attrs:{id:"指令语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令语法"}},[a._v("#")]),a._v(" 指令语法")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cn.vuejs.org/assets/directive.69c37117.png",alt:"img"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);