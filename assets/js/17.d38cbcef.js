(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{290:function(t,n,s){"use strict";s.r(n);var e=s(14),a=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"translating"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#translating"}},[t._v("#")]),t._v(" translating...")]),t._v(" "),n("h3",{attrs:{id:"使用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[t._v("#")]),t._v(" 使用方法")]),t._v(" "),n("h4",{attrs:{id:"使用插值方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用插值方式"}},[t._v("#")]),t._v(" 使用插值方式")]),t._v(" "),n("p",[t._v("在 input 中通过 v-model 指令双向绑定 message，然后在 methods 选项中定义 reversedMessage 方法，让 message 的内容反转，然后使用插值语法渲染到页面。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("< diV id =\" app \">\n输入内容：< input type =\" text \" v-model =\" message \">< br />\n反转内容：{{ reversedMessage ()}}\n</ div >\n\x3c!--引入 vue 文件--\x3e\n< script src =\"https://unpkg.com/vue@next\"></ script >\n<script＞\n//创建一个应用程序实例\n const vm = Vue .createApp ({\n//该函数返回数据对象\n data ()(\n return { message :''},\n//在选项对象的 methods 属性中定义方法\n methods :{\n reversedMessage : function (){\n return this.message.split ('').reverse().join ('')\n    }\n  }\n//在指定的 DOM 元素上装载应用程序实例的根组件\n}). mount ('# app ');\n<\/script>\n")])])]),n("h4",{attrs:{id:"使用事件调用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用事件调用"}},[t._v("#")]),t._v(" 使用事件调用")]),t._v(" "),n("p",[t._v("首先在 data()函数中定义 num 属性，然后在 methods 中定义 add()方法，该方法每次调用 num 自增。在页面中首先使用插值渲染 num 的值，使用 v-on 指令绑定 click 事件，然后在事件中调用 add()方法。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('< div id =" app ">\n{( num )}\n< p >< button v-on : click ="add ()">增加</button ></ p >\n</ diV >\n\x3c!--引入 vue 文件--\x3e\n< script src ="https://unpkg.com/vuenext"></ script >\n< script >\n//创建一个应用程序实例\n const vm = Vue . createApp ((\n该函数返回数据对象\n data (){\n return:{\n num :1\n  }\n },\n//在选项对象的 methods 属性中定义方法 \nmethods :{\n add : function ()(\n   this.num +=1\n   }\n  }\n//在指定的 DOM 元素上装载应用程序实例的根组件\n}). mount (\'# app \');\n</ script >\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);