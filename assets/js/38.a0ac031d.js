(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{316:function(t,e,a){"use strict";a.r(e);var n=a(14),v=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"官方文档创建第一个vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#官方文档创建第一个vue"}},[t._v("#")]),t._v(" 官方文档创建第一个vue")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("前提条件\n  熟悉命令行\n  已安装 16.0 或更高版本的 Node.js\n")])])]),e("ol",[e("li",[t._v("npm init vue@latest")]),t._v(" "),e("li",[t._v("cd "),e("code",[t._v("<your-project-name>")])]),t._v(" "),e("li",[t._v("npm install")]),t._v(" "),e("li",[t._v("npm run dev")])]),t._v(" "),e("h3",{attrs:{id:"vue3安装并创建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue3安装并创建"}},[t._v("#")]),t._v(" vue3安装并创建")]),t._v(" "),e("ol",[e("li",[t._v("vue install -g @vue/cli    安装或者升级")]),t._v(" "),e("li",[t._v("vue --version   / vue -V     检查版本")]),t._v(" "),e("li",[t._v("vue create project-name   创建项目名称")]),t._v(" "),e("li",[t._v("npm install  安装@vue/cli")]),t._v(" "),e("li",[t._v("npm run dev 运行\n"),e("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2017/01/56219E04-D156-43EC-AC59-BFE7E38A62C3.jpg",alt:"",title:"RUNOOB"}})])]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"vite"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[t._v("#")]),t._v(" Vite")]),t._v(" "),e("ol",[e("li",[t._v("npm init vite-app project-name 使用 Vite 快速构建 Vue 项目")]),t._v(" "),e("li",[t._v("npm init vite-app project-name 创建项目")]),t._v(" "),e("li",[t._v("npm install")]),t._v(" "),e("li",[t._v("npm run dev 运行\n"),e("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2021/02/62FB6F27-456F-46CF-8892-93D6A3E6F341.jpg",alt:"img",title:"RUNOOB"}})])]),t._v(" "),e("h3",{attrs:{id:"创建应用程序实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建应用程序实例"}},[t._v("#")]),t._v(" 创建应用程序实例")]),t._v(" "),e("p",[t._v("应用程序的实例充当了 MVVM 模式中的 ViewModel。createAPP()是一个全局 API，它接受一个根组件选项对象作为参数，该对象可以包含数据、方法、组件生命周期钩子等，然后返回应用程序实例本身。Vue 3.0 引入 createAPP()是为了解决 Vue 2.x 全局配置代理的一些问题。")]),t._v(" "),e("p",[t._v("创建了应用程序的实例后，可以调用实例的 mount()方法，制定一个 DOM 元素，在该 DOM 元素上装载应用程序的根组件，这样这个 DOM 元素中的所有数据变化都会被 Vue 框架所监控，从而实现数据的双向绑定。PS:实际开发中并不要求要把vue实例赋值给某个变量")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<! DOCTYPE html >\n< html >\n< head >\n< meta charset =" UTF -8">\n< title ＞创建应用程序实例＜/ title >\n</ head >\n< body >\n< div id =" app ">\n<！一简单的文本插值﹣->\n<h2>( message )}</h2>\n</ div >\n<!-﹣引入 vue 文件﹣->\n< script src ="https://unpkg· com / vuenext "></ script >\n<SCr1pt>\n/／创建一个应用程序实例\n const vm = Vue . createApP ( f \n/／该函数返回数据对象 data (0(\n returnf \n message :\'萧萧梧叶送寒声，江上秋风动客情。\n/／在指定的 DOM 元素上装载应用程序实例的根组件). mount (\'# app \');\n</ script >\n</ body >\n</ html >\n')])])])])}),[],!1,null,null,null);e.default=v.exports}}]);